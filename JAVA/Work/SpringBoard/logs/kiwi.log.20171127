main> [2017-11-27 14:16:52] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 14:16:52 KST 2017]; root of context hierarchy 
main> [2017-11-27 14:16:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 14:16:52] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 14:16:52] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceuser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at board.TestServiceUser.setUpBeforeClass(TestServiceUser.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:561)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 28 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1301)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1047)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	... 30 more
main> [2017-11-27 14:23:42] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 14:23:42 KST 2017]; root of context hierarchy 
main> [2017-11-27 14:23:42] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 14:23:42] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 14:23:42] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceuser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at board.TestServiceUser.setUpBeforeClass(TestServiceUser.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:561)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 28 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1301)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1047)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	... 30 more
main> [2017-11-27 14:50:29] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 14:50:29 KST 2017]; root of context hierarchy 
main> [2017-11-27 14:50:29] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 14:50:30] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 14:50:30] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceuser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at board.TestServiceUser.setUpBeforeClass(TestServiceUser.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:561)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 28 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1301)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1047)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	... 30 more
main> [2017-11-27 15:03:43] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 15:03:43 KST 2017]; root of context hierarchy 
main> [2017-11-27 15:03:43] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 15:03:43] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 15:03:43] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceuser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at board.TestServiceUser.setUpBeforeClass(TestServiceUser.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:561)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 28 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1301)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1047)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	... 30 more
main> [2017-11-27 15:04:15] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 15:04:15 KST 2017]; root of context hierarchy 
main> [2017-11-27 15:04:15] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 15:04:16] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 15:04:16] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceuser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at board.TestServiceUser.setUpBeforeClass(TestServiceUser.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:561)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 28 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1301)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1047)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	... 30 more
main> [2017-11-27 15:05:24] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 15:05:24 KST 2017]; root of context hierarchy 
main> [2017-11-27 15:05:24] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 15:05:25] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 15:05:25] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceuser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at board.TestServiceUser.setUpBeforeClass(TestServiceUser.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:561)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 28 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1301)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1047)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	... 30 more
main> [2017-11-27 15:06:52] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 15:06:52 KST 2017]; root of context hierarchy 
main> [2017-11-27 15:06:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 15:06:53] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 15:06:53] [ClassPathXmlApplicationContext] [487] [WARN] Exception encountered during context initialization - cancelling refresh attempt 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceuser': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:755)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:757)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:480)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at board.TestServiceUser.setUpBeforeClass(TestServiceUser.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private board.inf.IUser board.svc.ServiceUser.dao; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:561)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 28 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [board.inf.IUser] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier(value=daouser)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1301)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1047)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)
	... 30 more
main> [2017-11-27 15:08:26] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 15:08:26 KST 2017]; root of context hierarchy 
main> [2017-11-27 15:08:26] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 15:08:27] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 15:08:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 15:08:29] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 15:08:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 15:08:29] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 15:08:29] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 15:08:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:08:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:08:29] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 15:08:29] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:08:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 15:08:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 15:08:29] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 15:08:29] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 15:08:29] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 15:08:29] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 15:08:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:08:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:08:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:08:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 15:08:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 15:08:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@23aae55] 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.getCount(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.getMaxUserid() throws java.lang.Exception 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectAll() throws java.lang.Exception 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectLike(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectEqual(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUser(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:30] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 15:08:30] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 15:08:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 15:08:34] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 15:08:34] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781a9412] was not registered for synchronization because synchronization is not active 
main> [2017-11-27 15:08:34] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@781a9412] 
main> [2017-11-27 15:08:52] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 15:08:52 KST 2017]; root of context hierarchy 
main> [2017-11-27 15:08:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 15:08:52] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 15:08:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 15:08:53] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 15:08:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 15:08:53] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 15:08:53] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 15:08:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:08:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:08:53] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 15:08:53] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:08:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 15:08:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 15:08:53] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 15:08:53] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 15:08:53] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 15:08:53] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 15:08:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:08:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:08:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:08:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 15:08:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 15:08:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@23aae55] 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectEqual(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUser(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.getCount(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.getMaxUserid() throws java.lang.Exception 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectAll() throws java.lang.Exception 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectLike(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:08:53] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 15:08:53] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 15:08:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 15:08:54] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 15:08:54] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3068b369] was not registered for synchronization because synchronization is not active 
main> [2017-11-27 15:08:54] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3068b369] 
main> [2017-11-27 15:09:11] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 15:09:11 KST 2017]; root of context hierarchy 
main> [2017-11-27 15:09:11] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 15:09:12] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 15:09:12] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 15:09:12] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 15:09:12] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 15:09:12] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 15:09:12] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 15:09:12] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:09:12] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:09:12] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 15:09:12] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:09:12] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 15:09:12] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 15:09:12] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 15:09:12] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 15:09:12] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 15:09:12] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 15:09:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:09:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:09:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:09:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 15:09:12] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 15:09:12] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@23aae55] 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.getCount(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.getMaxUserid() throws java.lang.Exception 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectAll() throws java.lang.Exception 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectLike(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectEqual(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUser(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:12] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 15:09:12] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 15:09:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 15:09:19] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 15:09:19] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec7d8b3] was not registered for synchronization because synchronization is not active 
main> [2017-11-27 15:09:19] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ec7d8b3] 
main> [2017-11-27 15:09:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 15:09:39 KST 2017]; root of context hierarchy 
main> [2017-11-27 15:09:39] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 15:09:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 15:09:40] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 15:09:40] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 15:09:40] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 15:09:40] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 15:09:40] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 15:09:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:09:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:09:40] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 15:09:40] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 15:09:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 15:09:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 15:09:40] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 15:09:40] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 15:09:40] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 15:09:40] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 15:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 15:09:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 15:09:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 15:09:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@23aae55] 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.getCount(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.getMaxUserid() throws java.lang.Exception 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectAll() throws java.lang.Exception 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectLike(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectEqual(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUser(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 15:09:40] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 15:09:40] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 15:09:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 15:09:43] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 15:09:43] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3068b369] was not registered for synchronization because synchronization is not active 
main> [2017-11-27 15:09:43] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3068b369] 
main> [2017-11-27 17:03:32] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 17:03:32 KST 2017]; root of context hierarchy 
main> [2017-11-27 17:03:32] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 17:03:33] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 17:03:33] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 17:03:33] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 17:03:33] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 17:03:33] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 17:03:33] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 17:03:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:03:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:03:33] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 17:03:33] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:03:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:03:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:03:33] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 17:03:33] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 17:03:33] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 17:03:33] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 17:03:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:03:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:03:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:03:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 17:03:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 17:03:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@23c650a3] 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 17:03:33] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 17:03:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 17:03:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.insertUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-27 17:03:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 17:03:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 17:03:34] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 17:03:34] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:03:34] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:03:34] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:03:34] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:03:34] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:03:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 17:03:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 17:03:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 17:03:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 17:04:46] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 17:04:46 KST 2017]; root of context hierarchy 
main> [2017-11-27 17:04:46] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 17:04:46] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 17:04:47] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 17:04:47] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 17:04:47] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 17:04:47] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 17:04:47] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 17:04:47] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:04:47] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:04:47] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 17:04:47] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:04:47] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:04:47] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:04:47] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 17:04:47] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 17:04:47] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 17:04:47] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 17:04:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:04:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:04:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:04:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 17:04:47] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 17:04:47] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@23c650a3] 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 17:04:47] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 17:04:47] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 17:04:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.insertUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-27 17:04:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 17:04:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 17:04:52] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 17:04:52] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:04:52] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:06:27] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:06:27] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:06:27] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:06:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 17:06:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 17:06:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 17:06:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 17:09:45] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 17:09:45 KST 2017]; root of context hierarchy 
main> [2017-11-27 17:09:45] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 17:09:46] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 17:09:46] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 17:09:46] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 17:09:46] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 17:09:46] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 17:09:46] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 17:09:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:09:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:09:46] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 17:09:46] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:09:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:09:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:09:46] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 17:09:46] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 17:09:46] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 17:09:46] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 17:09:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:09:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:09:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:09:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 17:09:46] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 17:09:46] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@23c650a3] 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:09:46] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 17:09:46] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:09:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 17:09:46] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.insertUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-27 17:09:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 17:09:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 17:09:53] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 17:09:53] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:09:53] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 17:09:53] [insertUser] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_USER (userid, email, passwd, name, mobile, retireYN, InsertUID, InsertDT, UpdateUID, UpdateDT) VALUES( ?, ?, ?, ?, ?, 0, ?, ?, ?, ?)  
main> [2017-11-27 17:09:53] [insertUser] [139] [DEBUG] ==> Parameters: test(String), kshwang@hanmail.net(String), 1234(String), test(String), 010-3333-3392(String), test(String), 2017-11-27(Date), test(String), 2017-11-27(Date) 
main> [2017-11-27 17:09:53] [insertUser] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-27 17:09:53] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:10:02] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:10:02] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:10:02] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:10:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 17:10:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 17:10:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 17:10:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 17:13:33] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 17:13:33 KST 2017]; root of context hierarchy 
main> [2017-11-27 17:13:33] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 17:13:33] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 17:13:33] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 17:13:33] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 17:13:33] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 17:13:33] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 17:13:33] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 17:13:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:13:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:13:33] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 17:13:33] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:13:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:13:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:13:33] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 17:13:33] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 17:13:33] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 17:13:33] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 17:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 17:13:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 17:13:34] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@23c650a3] 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:13:34] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 17:13:34] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:13:34] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 17:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.insertUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-27 17:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 17:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 17:13:34] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 17:13:34] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:13:34] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 17:13:34] [insertUser] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_USER (userid, email, passwd, name, mobile, retireYN, InsertUID, InsertDT, UpdateUID, UpdateDT) VALUES( ?, ?, ?, ?, ?, 0, ?, ?, ?, ?)  
main> [2017-11-27 17:13:34] [insertUser] [139] [DEBUG] ==> Parameters: test(String), kshwang@hanmail.net(String), 1234(String), test(String), 010-3333-3392(String), test(String), null, test(String), null 
main> [2017-11-27 17:13:34] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:13:34] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
main> [2017-11-27 17:13:34] [SQLErrorCodesFactory] [126] [INFO] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
main> [2017-11-27 17:13:34] [SQLErrorCodesFactory] [199] [DEBUG] Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp2.BasicDataSource@8a62297] 
main> [2017-11-27 17:13:34] [SQLErrorCodesFactory] [217] [DEBUG] Database product name cached for DataSource [org.apache.commons.dbcp2.BasicDataSource@8a62297]: name is 'MySQL' 
main> [2017-11-27 17:13:34] [SQLErrorCodesFactory] [175] [DEBUG] SQL error codes for 'MySQL' found 
main> [2017-11-27 17:13:34] [SQLErrorCodeSQLExceptionTranslator] [397] [DEBUG] Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry 'test' for key 'userid']; SQL was [] for task [
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'test' for key 'userid'
### The error may involve mapper.mapperUser.insertUser-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO TB_USER (userid, email, passwd, name, mobile, retireYN, InsertUID, InsertDT, UpdateUID, UpdateDT)      VALUES( ?, ?, ?, ?, ?, 0, ?, ?, ?, ?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry 'test' for key 'userid'
] 
main> [2017-11-27 17:13:34] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:13:34] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:13:34] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@20ed3303] 
main> [2017-11-27 17:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 17:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 17:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [805690186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 17:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 17:52:07] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 17:52:07 KST 2017]; root of context hierarchy 
main> [2017-11-27 17:52:07] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 17:52:07] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 17:52:08] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 17:52:08] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 17:52:08] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 17:52:08] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 17:52:08] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 17:52:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:52:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:52:08] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 17:52:08] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 17:52:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:52:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 17:52:08] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 17:52:08] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 17:52:08] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 17:52:08] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 17:52:08] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:52:08] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:52:08] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 17:52:08] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 17:52:08] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 17:52:08] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@742d4e15] 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 17:52:08] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 17:52:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 17:52:08] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 17:52:08] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534ca02b] was not registered for synchronization because synchronization is not active 
main> [2017-11-27 17:52:08] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-27 17:52:08] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1089341986, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-27 17:52:08] [login] [139] [DEBUG] ==>  Preparing: select userid, name, email, mobile, retireYN, userno from TB_USER WHERE retireYN = 0 AND userid = ? AND passwd = ?  
main> [2017-11-27 17:52:08] [login] [139] [DEBUG] ==> Parameters: test(String), 1234(String) 
main> [2017-11-27 17:52:08] [login] [139] [DEBUG] <==      Total: 1 
main> [2017-11-27 17:52:08] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534ca02b] 
main> [2017-11-27 17:52:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:06:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:06:39 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:06:39] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:06:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:06:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:06:39] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:06:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:06:39] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:06:39] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:06:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:06:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:06:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:06:39] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:06:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:06:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:06:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:06:39] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:06:39] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:06:39] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:06:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:06:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:06:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:06:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:06:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:06:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@742d4e15] 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:06:39] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:06:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:06:40] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:06:40] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534ca02b] was not registered for synchronization because synchronization is not active 
main> [2017-11-27 18:06:40] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-27 18:06:40] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1089341986, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-27 18:06:40] [login] [139] [DEBUG] ==>  Preparing: select userid, name, email, mobile, retireYN, userno from TB_USER WHERE retireYN = 0 AND userid = ? AND passwd = ?  
main> [2017-11-27 18:06:40] [login] [139] [DEBUG] ==> Parameters: test(String), 1234(String) 
main> [2017-11-27 18:06:40] [login] [139] [DEBUG] <==      Total: 1 
main> [2017-11-27 18:06:40] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@534ca02b] 
main> [2017-11-27 18:06:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:23:45] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:23:45 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:23:45] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:23:45] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:23:45] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:23:45] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:23:45] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:23:45] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:23:45] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:23:45] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:23:45] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:23:45] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:23:45] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:23:45] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:23:45] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:23:45] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:23:45] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:23:45] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:23:45] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:23:45] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:23:45] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:23:45] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:23:45] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:23:46] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:23:46] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@50b1f030] 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:23:46] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:23:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:23:46] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.updateUserInfo]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-27 18:23:46] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 18:23:46] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 18:23:46] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:23:46] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:23:46] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 18:23:46] [updateUserInfo] [139] [DEBUG] ==>  Preparing: UPDATE TB_USER SET email=? ,passwd=? ,name=? ,mobile=? ,retireYN=? ,UpdateUID=? ,UpdateDT=? WHERE 1 = 1 AND userno = ? AND userid = ?  
main> [2017-11-27 18:23:46] [updateUserInfo] [139] [DEBUG] ==> Parameters: kshwang@hanmail.net(String), 1234(String), test(String), 010-3333-3392(String), 1(Integer), test(String), null, 1(Integer), test(String) 
main> [2017-11-27 18:23:46] [updateUserInfo] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-27 18:23:46] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:23:46] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:23:46] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:23:46] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:23:46] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 18:23:46] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:23:46] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 18:23:46] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:25:42] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:25:42 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:25:42] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:25:42] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:25:43] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:25:43] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:25:43] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:25:43] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:25:43] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:25:43] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:25:43] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:25:43] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:25:43] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:25:43] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:25:43] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:25:43] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:25:43] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:25:43] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:25:43] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:25:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:25:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:25:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:25:43] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:25:43] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:25:43] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@50b1f030] 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:25:43] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:25:43] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:25:43] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.updateUserInfo]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-27 18:25:43] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 18:25:43] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 18:25:43] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:25:43] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:25:43] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 18:25:43] [updateUserInfo] [139] [DEBUG] ==>  Preparing: UPDATE TB_USER SET email=? ,passwd=? ,name=? ,mobile=? ,retireYN=? ,UpdateUID=? ,UpdateDT=? WHERE 1 = 1 AND userno = ? AND userid = ?  
main> [2017-11-27 18:25:43] [updateUserInfo] [139] [DEBUG] ==> Parameters: kshwang@daum.net(String), 3456(String), test(String), 010-3333-3392(String), 0(Integer), test(String), 2017-11-27(Date), 1(Integer), test(String) 
main> [2017-11-27 18:25:43] [updateUserInfo] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-27 18:25:43] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:25:43] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:25:43] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:25:43] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49aa766b] 
main> [2017-11-27 18:25:43] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 18:25:43] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:25:43] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1287455719, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 18:25:43] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:34:59] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:34:59 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:34:59] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:35:00] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:35:00] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:35:00] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:35:00] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:35:00] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:35:00] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:35:00] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:35:00] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:35:00] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:35:00] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:35:00] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:35:00] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:35:00] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:35:00] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:35:00] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:35:00] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:35:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:35:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:35:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:35:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:35:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:35:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@4163f1cd] 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:35:00] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:35:00] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:35:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.updatePasswd]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-27 18:35:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 18:35:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 18:35:00] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:35:00] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@963176] 
main> [2017-11-27 18:35:00] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 18:35:00] [updatePasswd] [139] [DEBUG] ==>  Preparing: UPDATE TB_USER SET passwd = ? WHERE passwd = ? AND userid = ?  
main> [2017-11-27 18:35:00] [updatePasswd] [139] [DEBUG] ==> Parameters: 1234(String), 3456(String), test(String) 
main> [2017-11-27 18:35:00] [updatePasswd] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-27 18:35:00] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@963176] 
main> [2017-11-27 18:35:00] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@963176] 
main> [2017-11-27 18:35:00] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@963176] 
main> [2017-11-27 18:35:00] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@963176] 
main> [2017-11-27 18:35:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 18:35:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:35:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1392271025, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 18:35:01] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:39:40] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:39:40 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:39:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:39:41] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:39:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:39:41] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:39:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:39:41] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:39:41] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:39:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:39:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:39:41] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:39:41] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:39:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:39:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:39:41] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:39:41] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:39:41] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:39:41] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:39:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:39:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:39:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:39:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:39:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:39:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@5fa05212] 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:39:41] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:39:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:39:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-27 18:39:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 18:39:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 18:39:42] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:39:42] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65004ff6] 
main> [2017-11-27 18:39:42] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 18:39:42] [deleteUser] [139] [DEBUG] ==>  Preparing: UPDATE TB_USER SET retireYN=1 WHERE 1 = 1 AND userid = ?  
main> [2017-11-27 18:39:42] [deleteUser] [139] [DEBUG] ==> Parameters: test(String) 
main> [2017-11-27 18:39:42] [deleteUser] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-27 18:39:42] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65004ff6] 
main> [2017-11-27 18:39:42] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65004ff6] 
main> [2017-11-27 18:39:42] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65004ff6] 
main> [2017-11-27 18:39:42] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@65004ff6] 
main> [2017-11-27 18:39:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 18:39:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:39:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2053349061, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 18:39:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:43:34] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:43:34 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:43:34] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:43:34] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:43:35] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:43:35] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:43:35] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:43:35] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:43:35] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:43:35] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:43:35] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:43:35] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:43:35] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:43:35] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:43:35] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:43:35] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:43:35] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:43:35] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:43:35] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:43:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:43:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:43:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:43:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:43:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:43:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@3e681bc] 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:43:35] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:43:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:43:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.selectUserOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-27 18:43:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 18:43:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-27 18:43:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 18:43:35] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:43:35] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:43:35] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 18:43:35] [selectUserOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_USER WHERE userno = ?  
main> [2017-11-27 18:43:35] [selectUserOne] [139] [DEBUG] ==> Parameters: null 
main> [2017-11-27 18:43:35] [selectUserOne] [139] [DEBUG] <==      Total: 0 
main> [2017-11-27 18:43:35] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:43:35] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:43:35] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:43:35] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:43:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 18:43:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:43:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:43:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 18:43:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:44:50] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:44:50 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:44:50] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:44:50] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:44:50] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:44:50] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:44:50] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:44:50] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:44:50] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:44:50] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:44:50] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:44:50] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:44:50] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:44:50] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:44:50] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:44:50] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:44:50] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:44:50] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:44:50] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:44:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:44:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:44:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:44:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:44:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:44:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@3e681bc] 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:44:51] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:44:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:44:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.selectUserOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-27 18:44:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 18:44:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-27 18:44:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 18:44:57] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:44:57] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:44:57] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 18:44:57] [selectUserOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_USER WHERE userno = ?  
main> [2017-11-27 18:44:58] [selectUserOne] [139] [DEBUG] ==> Parameters: null 
main> [2017-11-27 18:44:58] [selectUserOne] [139] [DEBUG] <==      Total: 0 
main> [2017-11-27 18:44:58] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:10] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:10] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:10] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 18:45:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:45:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:45:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 18:45:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:45:32] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:45:32 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:45:32] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:45:32] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:45:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:45:32] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:45:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:45:32] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:45:32] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:45:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:45:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:45:32] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:45:32] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:45:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:45:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:45:32] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:45:32] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:45:32] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:45:32] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:45:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:45:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:45:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:45:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:45:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:45:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@3e681bc] 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:45:33] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:45:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:45:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.selectUserOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-27 18:45:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 18:45:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-27 18:45:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 18:45:33] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:45:33] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:33] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 18:45:33] [selectUserOne] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_USER WHERE userno = ?  
main> [2017-11-27 18:45:33] [selectUserOne] [139] [DEBUG] ==> Parameters: 1(Integer) 
main> [2017-11-27 18:45:33] [selectUserOne] [139] [DEBUG] <==      Total: 1 
main> [2017-11-27 18:45:33] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:33] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:33] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:33] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@67001148] 
main> [2017-11-27 18:45:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 18:45:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:45:33] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:45:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [336927685, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 18:45:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-27 18:52:23] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c6e276e: startup date [Mon Nov 27 18:52:23 KST 2017]; root of context hierarchy 
main> [2017-11-27 18:52:23] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-27 18:52:23] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-27 18:52:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-27 18:52:23] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-27 18:52:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-27 18:52:23] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-27 18:52:23] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-27 18:52:23] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:52:23] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:52:23] [ResolverUtil] [94] [DEBUG] Reader entry: ModelUser.class 
main> [2017-11-27 18:52:23] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model 
main> [2017-11-27 18:52:23] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:52:23] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace2/JAVA/Work/SpringBoard/bin/board/model/ModelUser.class 
main> [2017-11-27 18:52:23] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 }  board/model/ModelUser  java/lang/Object userno Ljava/lang/Integer; userid Ljava/lang/String; email passwd name mobile retireYN 	InsertUID InsertDT Ljava/sql/Date; 	UpdateUID UpdateDT 	getUserno ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this Lboard/model/ModelUser; 	setUserno (Ljava/lang/Integer;)V 	getUserid ()Ljava/lang/String;	  !   	setUserid (Ljava/lang/String;)V getEmail	  & 	  setEmail 	getPasswd	  *  
main> [2017-11-27 18:52:23] [ResolverUtil] [250] [DEBUG] Checking to see if class board.model.ModelUser matches criteria [is assignable to Object] 
main> [2017-11-27 18:52:24] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-27 18:52:24] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-27 18:52:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:52:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:52:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-27 18:52:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-27 18:52:24] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'serviceuser' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-27 18:52:24] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [board.svc.ServiceUser@5c09d180] 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.insertUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.login(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updateUserInfo(board.model.ModelUser,board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.updatePasswd(java.lang.String,java.lang.String,java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.deleteUser(board.model.ModelUser) throws java.lang.Exception 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserOne(board.model.ModelUser) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List board.svc.ServiceUser.selectUserList(board.model.ModelUser) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.logout(java.lang.String) throws java.lang.Exception 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int board.svc.ServiceUser.checkuserid(java.lang.String) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-27 18:52:24] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-27 18:52:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-27 18:52:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [board.svc.ServiceUser.selectUserList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-27 18:52:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-27 18:52:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-27 18:52:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-27 18:52:24] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-27 18:52:24] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@989da1] 
main> [2017-11-27 18:52:24] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-27 18:52:24] [selectUserList] [139] [DEBUG] ==>  Preparing: SELECT * FROM TB_USER where 1=1 AND (userid LIKE '%'||?||'%') AND (name LIKE '%'||?||'%') AND (email LIKE '%'||?||'%') AND (mobile LIKE '%'||?||'%') AND (retireYN LIKE '%'||?||'%') ORDER BY userno  
main> [2017-11-27 18:52:24] [selectUserList] [139] [DEBUG] ==> Parameters: te(String), te(String), ks(String), 010-3(String), 1(Integer) 
main> [2017-11-27 18:52:24] [selectUserList] [139] [DEBUG] <==      Total: 1 
main> [2017-11-27 18:52:24] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@989da1] 
main> [2017-11-27 18:52:24] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@989da1] 
main> [2017-11-27 18:52:24] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@989da1] 
main> [2017-11-27 18:52:24] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@989da1] 
main> [2017-11-27 18:52:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-27 18:52:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:52:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-27 18:52:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [806588571, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-27 18:52:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
